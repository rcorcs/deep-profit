src/profile.c:462:26: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
                  = gen_rtx_EXPR_LIST (REG_BR_PROB, GEN_INT (prob),
                    ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/profile.c:494:22: warning: expression result unused [-Wunused-value]
            num_branches++, num_never_executed;
                            ^~~~~~~~~~~~~~~~~~
2 warnings generated.
src/regmove.c:148:28: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
                    = gen_rtx_EXPR_LIST (REG_INC,
                      ~~~~~~~~~~~~~~~~~~~^~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
1 warning generated.
src/optabs.c:2797:40: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
        REG_NOTES (insn) = gen_rtx_EXPR_LIST (REG_NO_CONFLICT, op1,
                           ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/optabs.c:2801:40: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
        REG_NOTES (insn) = gen_rtx_EXPR_LIST (REG_NO_CONFLICT, op0,
                           ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/optabs.c:2830:42: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
  REG_NOTES (first) = gen_rtx_INSN_LIST (REG_LIBCALL, last,
                      ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
./src/genrtl.h:124:31: note: expanded from macro 'gen_rtx_INSN_LIST'
  gen_rtx_fmt_ue (INSN_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/optabs.c:2832:41: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
  REG_NOTES (last) = gen_rtx_INSN_LIST (REG_RETVAL, first, REG_NOTES (last));
                     ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/genrtl.h:124:31: note: expanded from macro 'gen_rtx_INSN_LIST'
  gen_rtx_fmt_ue (INSN_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/optabs.c:2903:44: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
            REG_NOTES (insn) = gen_rtx_EXPR_LIST (REG_EH_REGION, GEN_INT (-1),
                               ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/optabs.c:2984:46: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
      REG_NOTES (first) = gen_rtx_INSN_LIST (REG_LIBCALL, last,
                          ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
./src/genrtl.h:124:31: note: expanded from macro 'gen_rtx_INSN_LIST'
  gen_rtx_fmt_ue (INSN_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/optabs.c:2986:45: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
      REG_NOTES (last) = gen_rtx_INSN_LIST (REG_RETVAL, first,
                         ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
./src/genrtl.h:124:31: note: expanded from macro 'gen_rtx_INSN_LIST'
  gen_rtx_fmt_ue (INSN_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
7 warnings generated.
src/recog.c:3144:31: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
                              = gen_rtx_EXPR_LIST (REG_NOTE_KIND (note),
                                ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
./src/rtl.h:601:30: note: expanded from macro 'REG_NOTE_KIND'
#define REG_NOTE_KIND(LINK) ((enum reg_note) GET_MODE (LINK))
                             ^
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/recog.c:3194:31: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
                              = gen_rtx_EXPR_LIST (REG_EH_REGION,
                                ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
2 warnings generated.
src/flow.c:821:28: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
                    = gen_rtx_INSN_LIST (REG_LIBCALL, XEXP (note, 0),
                      ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/genrtl.h:124:31: note: expanded from macro 'gen_rtx_INSN_LIST'
  gen_rtx_fmt_ue (INSN_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
1 warning generated.
src/reload1.c:2501:31: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
              x = gen_rtx_EXPR_LIST (REG_NOTE_KIND (x), new, XEXP (x, 1));
                  ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/rtl.h:601:30: note: expanded from macro 'REG_NOTE_KIND'
#define REG_NOTE_KIND(LINK) ((enum reg_note) GET_MODE (LINK))
                             ^
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/reload1.c:7507:24: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
                = gen_rtx_EXPR_LIST (REG_EQUIV, in, REG_NOTES (insn));
                  ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/reload1.c:7516:45: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
      REG_NOTES (insn) = gen_rtx_EXPR_LIST (REG_EQUIV, in, REG_NOTES (insn));
                         ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/reload1.c:9480:29: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
              = gen_rtx_EXPR_LIST (REG_EH_REGION, XEXP (eh_note, 0),
                ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
4 warnings generated.
src/c-decl.c:3928:22: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
  stmt = build_stmt (DECL_STMT, decl);
         ~~~~~~~~~~  ^~~~~~~~~
src/c-decl.c:3929:21: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
  complit = build1 (COMPOUND_LITERAL_EXPR, TREE_TYPE (decl), stmt);
            ~~~~~~  ^~~~~~~~~~~~~~~~~~~~~
src/c-decl.c:7457:32: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
  stmt = add_stmt (build_stmt (COMPOUND_STMT, NULL_TREE));
                   ~~~~~~~~~~  ^~~~~~~~~~~~~
3 warnings generated.
c-parse.y:616:27: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
                  yyval.ttype = build1 (STMT_EXPR, last_expr_type, yyvsp[-2].ttype);
                                ~~~~~~  ^~~~~~~~~
c-parse.y:2047:41: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
                  yyval.ttype = add_stmt (build_stmt (COMPOUND_STMT, last_tree));
                                          ~~~~~~~~~~  ^~~~~~~~~~~~~
c-parse.y:2094:31: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
                    = add_stmt (build_stmt (DO_STMT, NULL_TREE,
                                ~~~~~~~~~~  ^~~~~~~
c-parse.y:2203:29: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
{ yyval.ttype = build_stmt (FOR_STMT, NULL_TREE, NULL_TREE,
                ~~~~~~~~~~  ^~~~~~~~
c-parse.y:2225:25: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
{ add_stmt (build_stmt (EXPR_STMT, yyvsp[-1].ttype)); ;
            ~~~~~~~~~~  ^~~~~~~~~
c-parse.y:2277:45: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
                      yyval.ttype = add_stmt (build_stmt (GOTO_STMT, decl));
                                              ~~~~~~~~~~  ^~~~~~~~~
c-parse.y:2287:41: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
                  yyval.ttype = add_stmt (build_stmt (GOTO_STMT, yyvsp[-1].ttype)); ;
                                          ~~~~~~~~~~  ^~~~~~~~~
c-parse.y:2311:45: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
                      yyval.ttype = add_stmt (build_stmt (LABEL_STMT, label));
                                              ~~~~~~~~~~  ^~~~~~~~~~
8 warnings generated.
src/gcse.c:5149:45: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
      REG_NOTES (insn) = gen_rtx_INSN_LIST (REG_LABEL, XEXP (x, 0),
                         ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/genrtl.h:124:31: note: expanded from macro 'gen_rtx_INSN_LIST'
  gen_rtx_fmt_ue (INSN_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
1 warning generated.
src/c-typeck.c:3159:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case COMPOUND_LITERAL_EXPR:
         ^
src/c-typeck.c:3315:12: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
      case COMPOUND_LITERAL_EXPR:
           ^
src/c-typeck.c:6891:36: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
      stmt = add_stmt (build_stmt (ASM_STMT, NULL_TREE, expr,
                       ~~~~~~~~~~  ^~~~~~~~
src/c-typeck.c:6968:32: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
  return add_stmt (build_stmt (ASM_STMT, cv_qualifier, string,
                   ~~~~~~~~~~  ^~~~~~~~
src/c-typeck.c:7185:33: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
  cs->switch_stmt = build_stmt (SWITCH_STMT, exp, NULL_TREE, orig_type);
                    ~~~~~~~~~~  ^~~~~~~~~~~
5 warnings generated.
src/tree-dump.c:577:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case EXPR_STMT:
         ^
src/tree-dump.c:558:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case COMPOUND_STMT:
         ^
src/tree-dump.c:564:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case DECL_STMT:
         ^
src/tree-dump.c:598:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case IF_STMT:
         ^
src/tree-dump.c:583:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case FOR_STMT:
         ^
src/tree-dump.c:625:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case WHILE_STMT:
         ^
src/tree-dump.c:570:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case DO_STMT:
         ^
src/tree-dump.c:612:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case RETURN_STMT:
         ^
src/tree-dump.c:537:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case BREAK_STMT:
         ^
src/tree-dump.c:538:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case CONTINUE_STMT:
         ^
src/tree-dump.c:618:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case SWITCH_STMT:
         ^
src/tree-dump.c:592:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case GOTO_STMT:
         ^
src/tree-dump.c:606:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case LABEL_STMT:
         ^
src/tree-dump.c:526:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case ASM_STMT:
         ^
src/tree-dump.c:632:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case SCOPE_STMT:
         ^
src/tree-dump.c:543:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case CASE_LABEL:
         ^
src/tree-dump.c:696:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case STMT_EXPR:
         ^
src/tree-dump.c:551:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case CLEANUP_STMT:
         ^
18 warnings generated.
src/function.c:5002:25: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
                        = gen_rtx_EXPR_LIST (REG_EQUIV,
                          ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/function.c:5008:25: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
                        = gen_rtx_EXPR_LIST (REG_EQUIV,
                          ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/function.c:5015:26: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
                  = gen_rtx_EXPR_LIST (REG_EQUIV,
                    ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
3 warnings generated.
src/combine.c:2718:41: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
          distribute_notes (gen_rtx_EXPR_LIST (REG_DEAD, i3dest_killed,
                            ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/combine.c:2722:41: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
          distribute_notes (gen_rtx_EXPR_LIST (REG_DEAD, i3dest_killed,
                            ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/combine.c:2734:41: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
          distribute_notes (gen_rtx_EXPR_LIST (REG_DEAD, i2dest, NULL_RTX),
                            ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/combine.c:2737:41: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
          distribute_notes (gen_rtx_EXPR_LIST (REG_DEAD, i2dest, NULL_RTX),
                            ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/combine.c:2748:41: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
          distribute_notes (gen_rtx_EXPR_LIST (REG_DEAD, i1dest, NULL_RTX),
                            ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/combine.c:2751:41: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
          distribute_notes (gen_rtx_EXPR_LIST (REG_DEAD, i1dest, NULL_RTX),
                            ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/combine.c:9741:31: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
          notes = gen_rtx_EXPR_LIST (REG_UNUSED,
                  ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/combine.c:11918:28: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
                    = gen_rtx_EXPR_LIST (REG_DEAD,
                      ~~~~~~~~~~~~~~~~~~~^~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/combine.c:11956:35: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
            *pnotes = gen_rtx_EXPR_LIST (REG_DEAD, x, *pnotes);
                      ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/combine.c:12446:31: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
                              = gen_rtx_EXPR_LIST (REG_UNUSED, XEXP (note, 0),
                                ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/combine.c:12576:26: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
                                = gen_rtx_EXPR_LIST (REG_DEAD, piece, NULL_RTX);
                                  ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/combine.c:12603:32: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
                                      = gen_rtx_EXPR_LIST (REG_UNUSED, piece,
                                        ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/combine.c:12641:13: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
                                               REG_NOTE_KIND (note),
                                               ^~~~~~~~~~~~~~~~~~~~
./src/rtl.h:601:30: note: expanded from macro 'REG_NOTE_KIND'
#define REG_NOTE_KIND(LINK) ((enum reg_note) GET_MODE (LINK))
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
13 warnings generated.
src/dependence.c:392:12: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
      case EXPR_STMT:
           ^
src/dependence.c:284:12: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
      case COMPOUND_STMT:
           ^
src/dependence.c:388:12: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
      case DECL_STMT:
           ^
src/dependence.c:294:12: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
      case FOR_STMT:
           ^
src/dependence.c:387:12: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
      case SCOPE_STMT:
           ^
5 warnings generated.
src/c-objc-common.c:109:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case DECL_STMT:
         ^
src/c-objc-common.c:116:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case GOTO_STMT:
         ^
2 warnings generated.
src/cse.c:5723:27: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
                          = gen_rtx_INSN_LIST (REG_WAS_0, const_insn,
                            ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
./src/genrtl.h:124:31: note: expanded from macro 'gen_rtx_INSN_LIST'
  gen_rtx_fmt_ue (INSN_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
1 warning generated.
src/loop.c:1748:44: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
            REG_NOTES (insn) = gen_rtx_INSN_LIST (REG_LABEL, XEXP (x, 0),
                               ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/genrtl.h:124:31: note: expanded from macro 'gen_rtx_INSN_LIST'
  gen_rtx_fmt_ue (INSN_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/loop.c:7976:29: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
              = gen_rtx_EXPR_LIST (REG_NONNEG, bl->biv->dest_reg,
                ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/loop.c:8002:26: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
                  = gen_rtx_EXPR_LIST (REG_NONNEG, bl->biv->dest_reg,
                    ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/loop.c:8399:46: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
                      REG_NOTES (tem) = gen_rtx_EXPR_LIST (REG_NONNEG, reg,
                                        ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
4 warnings generated.
src/doloop.c:528:23: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
        = gen_rtx_EXPR_LIST (REG_NONNEG, NULL_RTX, REG_NOTES (jump_insn));
          ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
1 warning generated.
src/c-semantics.c:60:18: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
  *t = build_nt (EXPR_STMT, void_zero_node);
       ~~~~~~~~  ^~~~~~~~~
src/c-semantics.c:80:25: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
          tree pos = build_nt (FILE_STMT, get_identifier (input_filename));
                     ~~~~~~~~  ^~~~~~~~~
src/c-semantics.c:110:27: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
  decl_stmt = build_stmt (DECL_STMT, decl);
              ~~~~~~~~~~  ^~~~~~~~~
src/c-semantics.c:134:20: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
  ss = build_stmt (SCOPE_STMT, NULL_TREE);
       ~~~~~~~~~~  ^~~~~~~~~~
src/c-semantics.c:478:23: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
  return (build_stmt (RETURN_STMT, expr));
          ~~~~~~~~~~  ^~~~~~~~~~~
src/c-semantics.c:553:23: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
  return (build_stmt (BREAK_STMT));
          ~~~~~~~~~~  ^~~~~~~~~~
src/c-semantics.c:571:23: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
  return (build_stmt (CONTINUE_STMT));
          ~~~~~~~~~~  ^~~~~~~~~~~~~
src/c-semantics.c:658:22: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
  return build_stmt (CASE_LABEL, low_value, high_value, label_decl);
         ~~~~~~~~~~  ^~~~~~~~~~
src/c-semantics.c:785:7: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
        case EXPR_STMT:
             ^
src/c-semantics.c:812:7: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
        case COMPOUND_STMT:
             ^
src/c-semantics.c:792:7: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
        case DECL_STMT:
             ^
src/c-semantics.c:808:7: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
        case IF_STMT:
             ^
src/c-semantics.c:796:7: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
        case FOR_STMT:
             ^
src/c-semantics.c:800:7: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
        case WHILE_STMT:
             ^
src/c-semantics.c:804:7: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
        case DO_STMT:
             ^
src/c-semantics.c:781:7: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
        case RETURN_STMT:
             ^
src/c-semantics.c:816:7: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
        case BREAK_STMT:
             ^
src/c-semantics.c:820:7: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
        case CONTINUE_STMT:
             ^
src/c-semantics.c:824:7: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
        case SWITCH_STMT:
             ^
src/c-semantics.c:836:7: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
        case GOTO_STMT:
             ^
src/c-semantics.c:832:7: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
        case LABEL_STMT:
             ^
src/c-semantics.c:840:7: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
        case ASM_STMT:
             ^
src/c-semantics.c:846:7: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
        case SCOPE_STMT:
             ^
src/c-semantics.c:777:7: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
        case FILE_STMT:
             ^
src/c-semantics.c:828:7: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
        case CASE_LABEL:
             ^
src/c-semantics.c:850:7: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
        case CLEANUP_STMT:
             ^
26 warnings generated.
src/calls.c:613:48: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
    REG_NOTES (call_insn) = gen_rtx_EXPR_LIST (REG_EH_REGION, const0_rtx,
                            ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/calls.c:617:48: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
    REG_NOTES (call_insn) = gen_rtx_EXPR_LIST (REG_NORETURN, const0_rtx,
                            ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/calls.c:620:48: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
    REG_NOTES (call_insn) = gen_rtx_EXPR_LIST (REG_ALWAYS_RETURN, const0_rtx,
                            ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/calls.c:625:50: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
      REG_NOTES (call_insn) = gen_rtx_EXPR_LIST (REG_SETJMP, const0_rtx,
                              ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/calls.c:3123:25: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
            gen_rtx_EXPR_LIST (REG_NOALIAS, temp, REG_NOTES (last));
            ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
5 warnings generated.
src/jump.c:434:41: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
                    = copy_insn_1 (gen_rtx_EXPR_LIST (REG_NOTE_KIND (link),
                                   ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
./src/rtl.h:601:30: note: expanded from macro 'REG_NOTE_KIND'
#define REG_NOTE_KIND(LINK) ((enum reg_note) GET_MODE (LINK))
                             ^
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/jump.c:439:41: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
                    = copy_insn_1 (gen_rtx_INSN_LIST (REG_NOTE_KIND (link),
                                   ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
./src/rtl.h:601:30: note: expanded from macro 'REG_NOTE_KIND'
#define REG_NOTE_KIND(LINK) ((enum reg_note) GET_MODE (LINK))
                             ^
./src/genrtl.h:124:31: note: expanded from macro 'gen_rtx_INSN_LIST'
  gen_rtx_fmt_ue (INSN_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/jump.c:1472:43: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
                  REG_NOTES (insn) = gen_rtx_INSN_LIST (REG_LABEL, label,
                                     ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
./src/genrtl.h:124:31: note: expanded from macro 'gen_rtx_INSN_LIST'
  gen_rtx_fmt_ue (INSN_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/jump.c:1626:28: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
                    = gen_rtx_EXPR_LIST (REG_UNUSED, reg,
                      ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
4 warnings generated.
src/insn-attrtab.c:450:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_ATHLON)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~
src/insn-attrtab.c:450:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_ATHLON)))
          ~           ^              ~
src/insn-attrtab.c:450:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_ATHLON)))
                      ^~
                      =
src/insn-attrtab.c:516:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_ATHLON)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~
src/insn-attrtab.c:516:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_ATHLON)))
          ~           ^              ~
src/insn-attrtab.c:516:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_ATHLON)))
                      ^~
                      =
src/insn-attrtab.c:520:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      else if (((ix86_cpu) == (CPU_PENTIUM)))
                ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:520:28: note: remove extraneous parentheses around the comparison to silence this warning
      else if (((ix86_cpu) == (CPU_PENTIUM)))
               ~           ^               ~
src/insn-attrtab.c:520:28: note: use '=' to turn this equality comparison into an assignment
      else if (((ix86_cpu) == (CPU_PENTIUM)))
                           ^~
                           =
src/insn-attrtab.c:524:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      else if (((ix86_cpu) == (CPU_K6)))
                ~~~~~~~~~~~^~~~~~~~~~~
src/insn-attrtab.c:524:28: note: remove extraneous parentheses around the comparison to silence this warning
      else if (((ix86_cpu) == (CPU_K6)))
               ~           ^          ~
src/insn-attrtab.c:524:28: note: use '=' to turn this equality comparison into an assignment
      else if (((ix86_cpu) == (CPU_K6)))
                           ^~
                           =
src/insn-attrtab.c:545:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_ATHLON)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~
src/insn-attrtab.c:545:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_ATHLON)))
          ~           ^              ~
src/insn-attrtab.c:545:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_ATHLON)))
                      ^~
                      =
src/insn-attrtab.c:549:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      else if (((ix86_cpu) == (CPU_PENTIUM)))
                ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:549:28: note: remove extraneous parentheses around the comparison to silence this warning
      else if (((ix86_cpu) == (CPU_PENTIUM)))
               ~           ^               ~
src/insn-attrtab.c:549:28: note: use '=' to turn this equality comparison into an assignment
      else if (((ix86_cpu) == (CPU_PENTIUM)))
                           ^~
                           =
src/insn-attrtab.c:553:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      else if (((ix86_cpu) == (CPU_K6)))
                ~~~~~~~~~~~^~~~~~~~~~~
src/insn-attrtab.c:553:28: note: remove extraneous parentheses around the comparison to silence this warning
      else if (((ix86_cpu) == (CPU_K6)))
               ~           ^          ~
src/insn-attrtab.c:553:28: note: use '=' to turn this equality comparison into an assignment
      else if (((ix86_cpu) == (CPU_K6)))
                           ^~
                           =
src/insn-attrtab.c:557:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      else if (((ix86_cpu) == (CPU_PENTIUMPRO)))
                ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
src/insn-attrtab.c:557:28: note: remove extraneous parentheses around the comparison to silence this warning
      else if (((ix86_cpu) == (CPU_PENTIUMPRO)))
               ~           ^                  ~
src/insn-attrtab.c:557:28: note: use '=' to turn this equality comparison into an assignment
      else if (((ix86_cpu) == (CPU_PENTIUMPRO)))
                           ^~
                           =
src/insn-attrtab.c:567:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:567:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:567:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:595:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_ATHLON)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~
src/insn-attrtab.c:595:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_ATHLON)))
          ~           ^              ~
src/insn-attrtab.c:595:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_ATHLON)))
                      ^~
                      =
src/insn-attrtab.c:599:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      else if (((ix86_cpu) == (CPU_PENTIUM)))
                ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:599:28: note: remove extraneous parentheses around the comparison to silence this warning
      else if (((ix86_cpu) == (CPU_PENTIUM)))
               ~           ^               ~
src/insn-attrtab.c:599:28: note: use '=' to turn this equality comparison into an assignment
      else if (((ix86_cpu) == (CPU_PENTIUM)))
                           ^~
                           =
src/insn-attrtab.c:870:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      else if (((ix86_cpu) == (CPU_ATHLON)))
                ~~~~~~~~~~~^~~~~~~~~~~~~~~
src/insn-attrtab.c:870:28: note: remove extraneous parentheses around the comparison to silence this warning
      else if (((ix86_cpu) == (CPU_ATHLON)))
               ~           ^              ~
src/insn-attrtab.c:870:28: note: use '=' to turn this equality comparison into an assignment
      else if (((ix86_cpu) == (CPU_ATHLON)))
                           ^~
                           =
src/insn-attrtab.c:878:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      else if (((ix86_cpu) == (CPU_K6)))
                ~~~~~~~~~~~^~~~~~~~~~~
src/insn-attrtab.c:878:28: note: remove extraneous parentheses around the comparison to silence this warning
      else if (((ix86_cpu) == (CPU_K6)))
               ~           ^          ~
src/insn-attrtab.c:878:28: note: use '=' to turn this equality comparison into an assignment
      else if (((ix86_cpu) == (CPU_K6)))
                           ^~
                           =
src/insn-attrtab.c:893:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      else if (((ix86_cpu) == (CPU_ATHLON)))
                ~~~~~~~~~~~^~~~~~~~~~~~~~~
src/insn-attrtab.c:893:28: note: remove extraneous parentheses around the comparison to silence this warning
      else if (((ix86_cpu) == (CPU_ATHLON)))
               ~           ^              ~
src/insn-attrtab.c:893:28: note: use '=' to turn this equality comparison into an assignment
      else if (((ix86_cpu) == (CPU_ATHLON)))
                           ^~
                           =
src/insn-attrtab.c:901:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      else if (((ix86_cpu) == (CPU_K6)))
                ~~~~~~~~~~~^~~~~~~~~~~
src/insn-attrtab.c:901:28: note: remove extraneous parentheses around the comparison to silence this warning
      else if (((ix86_cpu) == (CPU_K6)))
               ~           ^          ~
src/insn-attrtab.c:901:28: note: use '=' to turn this equality comparison into an assignment
      else if (((ix86_cpu) == (CPU_K6)))
                           ^~
                           =
src/insn-attrtab.c:941:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      else if (((ix86_cpu) == (CPU_ATHLON)))
                ~~~~~~~~~~~^~~~~~~~~~~~~~~
src/insn-attrtab.c:941:28: note: remove extraneous parentheses around the comparison to silence this warning
      else if (((ix86_cpu) == (CPU_ATHLON)))
               ~           ^              ~
src/insn-attrtab.c:941:28: note: use '=' to turn this equality comparison into an assignment
      else if (((ix86_cpu) == (CPU_ATHLON)))
                           ^~
                           =
src/insn-attrtab.c:949:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      else if (((ix86_cpu) == (CPU_K6)))
                ~~~~~~~~~~~^~~~~~~~~~~
src/insn-attrtab.c:949:28: note: remove extraneous parentheses around the comparison to silence this warning
      else if (((ix86_cpu) == (CPU_K6)))
               ~           ^          ~
src/insn-attrtab.c:949:28: note: use '=' to turn this equality comparison into an assignment
      else if (((ix86_cpu) == (CPU_K6)))
                           ^~
                           =
src/insn-attrtab.c:1181:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUMPRO)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
src/insn-attrtab.c:1181:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUMPRO)))
          ~           ^                  ~
src/insn-attrtab.c:1181:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUMPRO)))
                      ^~
                      =
src/insn-attrtab.c:1257:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:1257:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:1257:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:1261:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      else if (((ix86_cpu) == (CPU_ATHLON)))
                ~~~~~~~~~~~^~~~~~~~~~~~~~~
src/insn-attrtab.c:1261:28: note: remove extraneous parentheses around the comparison to silence this warning
      else if (((ix86_cpu) == (CPU_ATHLON)))
               ~           ^              ~
src/insn-attrtab.c:1261:28: note: use '=' to turn this equality comparison into an assignment
      else if (((ix86_cpu) == (CPU_ATHLON)))
                           ^~
                           =
src/insn-attrtab.c:1291:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:1291:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:1291:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:1295:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      else if (((ix86_cpu) == (CPU_ATHLON)))
                ~~~~~~~~~~~^~~~~~~~~~~~~~~
src/insn-attrtab.c:1295:28: note: remove extraneous parentheses around the comparison to silence this warning
      else if (((ix86_cpu) == (CPU_ATHLON)))
               ~           ^              ~
src/insn-attrtab.c:1295:28: note: use '=' to turn this equality comparison into an assignment
      else if (((ix86_cpu) == (CPU_ATHLON)))
                           ^~
                           =
src/insn-attrtab.c:1299:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      else if (((ix86_cpu) == (CPU_PENTIUMPRO)))
                ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
src/insn-attrtab.c:1299:28: note: remove extraneous parentheses around the comparison to silence this warning
      else if (((ix86_cpu) == (CPU_PENTIUMPRO)))
               ~           ^                  ~
src/insn-attrtab.c:1299:28: note: use '=' to turn this equality comparison into an assignment
      else if (((ix86_cpu) == (CPU_PENTIUMPRO)))
                           ^~
                           =
src/insn-attrtab.c:1303:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      else if (((ix86_cpu) == (CPU_K6)))
                ~~~~~~~~~~~^~~~~~~~~~~
src/insn-attrtab.c:1303:28: note: remove extraneous parentheses around the comparison to silence this warning
      else if (((ix86_cpu) == (CPU_K6)))
               ~           ^          ~
src/insn-attrtab.c:1303:28: note: use '=' to turn this equality comparison into an assignment
      else if (((ix86_cpu) == (CPU_K6)))
                           ^~
                           =
src/insn-attrtab.c:1475:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_K6)))
           ~~~~~~~~~~~^~~~~~~~~~~
src/insn-attrtab.c:1475:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_K6)))
          ~           ^          ~
src/insn-attrtab.c:1475:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_K6)))
                      ^~
                      =
src/insn-attrtab.c:1618:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_ATHLON)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~
src/insn-attrtab.c:1618:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_ATHLON)))
          ~           ^              ~
src/insn-attrtab.c:1618:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_ATHLON)))
                      ^~
                      =
src/insn-attrtab.c:1626:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      else if (((ix86_cpu) == (CPU_K6)))
                ~~~~~~~~~~~^~~~~~~~~~~
src/insn-attrtab.c:1626:28: note: remove extraneous parentheses around the comparison to silence this warning
      else if (((ix86_cpu) == (CPU_K6)))
               ~           ^          ~
src/insn-attrtab.c:1626:28: note: use '=' to turn this equality comparison into an assignment
      else if (((ix86_cpu) == (CPU_K6)))
                           ^~
                           =
src/insn-attrtab.c:1888:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUMPRO)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
src/insn-attrtab.c:1888:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUMPRO)))
          ~           ^                  ~
src/insn-attrtab.c:1888:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUMPRO)))
                      ^~
                      =
src/insn-attrtab.c:2219:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_ATHLON)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~
src/insn-attrtab.c:2219:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_ATHLON)))
          ~           ^              ~
src/insn-attrtab.c:2219:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_ATHLON)))
                      ^~
                      =
src/insn-attrtab.c:2438:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_ATHLON)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~
src/insn-attrtab.c:2438:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_ATHLON)))
          ~           ^              ~
src/insn-attrtab.c:2438:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_ATHLON)))
                      ^~
                      =
src/insn-attrtab.c:2657:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_ATHLON)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~
src/insn-attrtab.c:2657:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_ATHLON)))
          ~           ^              ~
src/insn-attrtab.c:2657:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_ATHLON)))
                      ^~
                      =
src/insn-attrtab.c:2764:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_ATHLON)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~
src/insn-attrtab.c:2764:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_ATHLON)))
          ~           ^              ~
src/insn-attrtab.c:2764:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_ATHLON)))
                      ^~
                      =
src/insn-attrtab.c:2897:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_ATHLON)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~
src/insn-attrtab.c:2897:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_ATHLON)))
          ~           ^              ~
src/insn-attrtab.c:2897:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_ATHLON)))
                      ^~
                      =
src/insn-attrtab.c:3397:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_ATHLON)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~
src/insn-attrtab.c:3397:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_ATHLON)))
          ~           ^              ~
src/insn-attrtab.c:3397:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_ATHLON)))
                      ^~
                      =
src/insn-attrtab.c:3878:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_ATHLON)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~
src/insn-attrtab.c:3878:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_ATHLON)))
          ~           ^              ~
src/insn-attrtab.c:3878:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_ATHLON)))
                      ^~
                      =
src/insn-attrtab.c:4124:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_K6)))
           ~~~~~~~~~~~^~~~~~~~~~~
src/insn-attrtab.c:4124:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_K6)))
          ~           ^          ~
src/insn-attrtab.c:4124:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_K6)))
                      ^~
                      =
src/insn-attrtab.c:4301:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_K6)))
           ~~~~~~~~~~~^~~~~~~~~~~
src/insn-attrtab.c:4301:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_K6)))
          ~           ^          ~
src/insn-attrtab.c:4301:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_K6)))
                      ^~
                      =
src/insn-attrtab.c:4363:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_K6)))
           ~~~~~~~~~~~^~~~~~~~~~~
src/insn-attrtab.c:4363:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_K6)))
          ~           ^          ~
src/insn-attrtab.c:4363:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_K6)))
                      ^~
                      =
src/insn-attrtab.c:4809:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_K6)))
           ~~~~~~~~~~~^~~~~~~~~~~
src/insn-attrtab.c:4809:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_K6)))
          ~           ^          ~
src/insn-attrtab.c:4809:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_K6)))
                      ^~
                      =
src/insn-attrtab.c:5425:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_K6)))
           ~~~~~~~~~~~^~~~~~~~~~~
src/insn-attrtab.c:5425:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_K6)))
          ~           ^          ~
src/insn-attrtab.c:5425:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_K6)))
                      ^~
                      =
src/insn-attrtab.c:5859:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_K6)))
           ~~~~~~~~~~~^~~~~~~~~~~
src/insn-attrtab.c:5859:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_K6)))
          ~           ^          ~
src/insn-attrtab.c:5859:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_K6)))
                      ^~
                      =
src/insn-attrtab.c:5885:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_K6)))
           ~~~~~~~~~~~^~~~~~~~~~~
src/insn-attrtab.c:5885:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_K6)))
          ~           ^          ~
src/insn-attrtab.c:5885:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_K6)))
                      ^~
                      =
src/insn-attrtab.c:6099:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_K6)))
           ~~~~~~~~~~~^~~~~~~~~~~
src/insn-attrtab.c:6099:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_K6)))
          ~           ^          ~
src/insn-attrtab.c:6099:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_K6)))
                      ^~
                      =
src/insn-attrtab.c:6369:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUMPRO)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
src/insn-attrtab.c:6369:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUMPRO)))
          ~           ^                  ~
src/insn-attrtab.c:6369:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUMPRO)))
                      ^~
                      =
src/insn-attrtab.c:6639:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUMPRO)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
src/insn-attrtab.c:6639:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUMPRO)))
          ~           ^                  ~
src/insn-attrtab.c:6639:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUMPRO)))
                      ^~
                      =
src/insn-attrtab.c:6665:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUMPRO)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
src/insn-attrtab.c:6665:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUMPRO)))
          ~           ^                  ~
src/insn-attrtab.c:6665:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUMPRO)))
                      ^~
                      =
src/insn-attrtab.c:6756:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUMPRO)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
src/insn-attrtab.c:6756:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUMPRO)))
          ~           ^                  ~
src/insn-attrtab.c:6756:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUMPRO)))
                      ^~
                      =
src/insn-attrtab.c:6959:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUMPRO)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
src/insn-attrtab.c:6959:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUMPRO)))
          ~           ^                  ~
src/insn-attrtab.c:6959:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUMPRO)))
                      ^~
                      =
src/insn-attrtab.c:7567:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:7567:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:7567:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:8349:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUMPRO)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
src/insn-attrtab.c:8349:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUMPRO)))
          ~           ^                  ~
src/insn-attrtab.c:8349:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUMPRO)))
                      ^~
                      =
src/insn-attrtab.c:8392:20: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
          if (((ix86_cpu) == (CPU_PENTIUM)))
               ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:8392:20: note: remove extraneous parentheses around the comparison to silence this warning
          if (((ix86_cpu) == (CPU_PENTIUM)))
              ~           ^               ~
src/insn-attrtab.c:8392:20: note: use '=' to turn this equality comparison into an assignment
          if (((ix86_cpu) == (CPU_PENTIUM)))
                          ^~
                          =
src/insn-attrtab.c:8635:25: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
          else if (((ix86_cpu) == (CPU_PENTIUM)))
                    ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:8635:25: note: remove extraneous parentheses around the comparison to silence this warning
          else if (((ix86_cpu) == (CPU_PENTIUM)))
                   ~           ^               ~
src/insn-attrtab.c:8635:25: note: use '=' to turn this equality comparison into an assignment
          else if (((ix86_cpu) == (CPU_PENTIUM)))
                               ^~
                               =
src/insn-attrtab.c:8657:25: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
          else if (((ix86_cpu) == (CPU_PENTIUM)))
                    ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:8657:25: note: remove extraneous parentheses around the comparison to silence this warning
          else if (((ix86_cpu) == (CPU_PENTIUM)))
                   ~           ^               ~
src/insn-attrtab.c:8657:25: note: use '=' to turn this equality comparison into an assignment
          else if (((ix86_cpu) == (CPU_PENTIUM)))
                               ^~
                               =
src/insn-attrtab.c:8703:25: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
          else if (((ix86_cpu) == (CPU_PENTIUM)))
                    ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:8703:25: note: remove extraneous parentheses around the comparison to silence this warning
          else if (((ix86_cpu) == (CPU_PENTIUM)))
                   ~           ^               ~
src/insn-attrtab.c:8703:25: note: use '=' to turn this equality comparison into an assignment
          else if (((ix86_cpu) == (CPU_PENTIUM)))
                               ^~
                               =
src/insn-attrtab.c:8734:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUMPRO)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
src/insn-attrtab.c:8734:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUMPRO)))
          ~           ^                  ~
src/insn-attrtab.c:8734:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUMPRO)))
                      ^~
                      =
src/insn-attrtab.c:8781:20: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
          if (((ix86_cpu) == (CPU_PENTIUM)))
               ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:8781:20: note: remove extraneous parentheses around the comparison to silence this warning
          if (((ix86_cpu) == (CPU_PENTIUM)))
              ~           ^               ~
src/insn-attrtab.c:8781:20: note: use '=' to turn this equality comparison into an assignment
          if (((ix86_cpu) == (CPU_PENTIUM)))
                          ^~
                          =
src/insn-attrtab.c:8942:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:8942:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:8942:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:9223:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:9223:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:9223:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:9269:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:9269:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:9269:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:9293:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:9293:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:9293:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:9339:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:9339:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:9339:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:9356:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:9356:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:9356:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:9380:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:9380:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:9380:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:9398:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:9398:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:9398:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:9420:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:9420:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:9420:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:9438:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:9438:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:9438:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:9458:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:9458:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:9458:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:9581:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:9581:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:9581:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:9603:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:9603:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:9603:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:9633:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:9633:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:9633:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:9669:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:9669:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:9669:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:9759:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:9759:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:9759:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:9785:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:9785:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:9785:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:9801:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:9801:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:9801:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:9823:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:9823:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:9823:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:9850:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:9850:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:9850:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:9872:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:9872:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:9872:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:9899:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:9899:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:9899:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:9924:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:9924:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:9924:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:9947:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:9947:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:9947:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:10034:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:10034:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:10034:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:10062:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:10062:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:10062:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:10089:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:10089:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:10089:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:10111:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:10111:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:10111:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:10132:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:10132:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:10132:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:10150:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:10150:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:10150:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:10184:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:10184:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:10184:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:10209:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:10209:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:10209:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:10232:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:10232:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:10232:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:10343:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:10343:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:10343:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:10384:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:10384:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:10384:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:10466:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:10466:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:10466:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:10480:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:10480:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:10480:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:10506:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:10506:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:10506:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:10530:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:10530:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:10530:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:10554:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:10554:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:10554:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:10572:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:10572:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:10572:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:10594:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:10594:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:10594:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:10612:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:10612:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:10612:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:10632:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:10632:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:10632:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:10654:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:10654:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:10654:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:10671:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:10671:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:10671:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:10842:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:10842:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:10842:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:10878:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:10878:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:10878:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:10899:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:10899:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:10899:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:10936:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:10936:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:10936:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:10959:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:10959:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:10959:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:11126:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:11126:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:11126:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:11186:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:11186:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:11186:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:11200:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:11200:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:11200:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:11225:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:11225:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:11225:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:11268:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:11268:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:11268:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:11353:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:11353:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:11353:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:11487:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:11487:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:11487:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:31542:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUMPRO)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
src/insn-attrtab.c:31542:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUMPRO)))
          ~           ^                  ~
src/insn-attrtab.c:31542:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUMPRO)))
                      ^~
                      =
src/insn-attrtab.c:31585:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:31585:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:31585:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:31958:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:31958:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:31958:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:31982:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      else if (((ix86_cpu) == (CPU_PENTIUMPRO)))
                ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
src/insn-attrtab.c:31982:28: note: remove extraneous parentheses around the comparison to silence this warning
      else if (((ix86_cpu) == (CPU_PENTIUMPRO)))
               ~           ^                  ~
src/insn-attrtab.c:31982:28: note: use '=' to turn this equality comparison into an assignment
      else if (((ix86_cpu) == (CPU_PENTIUMPRO)))
                           ^~
                           =
src/insn-attrtab.c:32062:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      else if (((ix86_cpu) == (CPU_PENTIUMPRO)))
                ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
src/insn-attrtab.c:32062:28: note: remove extraneous parentheses around the comparison to silence this warning
      else if (((ix86_cpu) == (CPU_PENTIUMPRO)))
               ~           ^                  ~
src/insn-attrtab.c:32062:28: note: use '=' to turn this equality comparison into an assignment
      else if (((ix86_cpu) == (CPU_PENTIUMPRO)))
                           ^~
                           =
src/insn-attrtab.c:32127:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:32127:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:32127:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:32202:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:32202:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:32202:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:32280:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUMPRO)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
src/insn-attrtab.c:32280:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUMPRO)))
          ~           ^                  ~
src/insn-attrtab.c:32280:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUMPRO)))
                      ^~
                      =
src/insn-attrtab.c:32323:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:32323:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:32323:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:32696:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:32696:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:32696:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:32720:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      else if (((ix86_cpu) == (CPU_PENTIUMPRO)))
                ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
src/insn-attrtab.c:32720:28: note: remove extraneous parentheses around the comparison to silence this warning
      else if (((ix86_cpu) == (CPU_PENTIUMPRO)))
               ~           ^                  ~
src/insn-attrtab.c:32720:28: note: use '=' to turn this equality comparison into an assignment
      else if (((ix86_cpu) == (CPU_PENTIUMPRO)))
                           ^~
                           =
src/insn-attrtab.c:32800:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      else if (((ix86_cpu) == (CPU_PENTIUMPRO)))
                ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
src/insn-attrtab.c:32800:28: note: remove extraneous parentheses around the comparison to silence this warning
      else if (((ix86_cpu) == (CPU_PENTIUMPRO)))
               ~           ^                  ~
src/insn-attrtab.c:32800:28: note: use '=' to turn this equality comparison into an assignment
      else if (((ix86_cpu) == (CPU_PENTIUMPRO)))
                           ^~
                           =
src/insn-attrtab.c:32865:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:32865:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:32865:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
src/insn-attrtab.c:32940:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
      if (((ix86_cpu) == (CPU_PENTIUM)))
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~
src/insn-attrtab.c:32940:23: note: remove extraneous parentheses around the comparison to silence this warning
      if (((ix86_cpu) == (CPU_PENTIUM)))
          ~           ^               ~
src/insn-attrtab.c:32940:23: note: use '=' to turn this equality comparison into an assignment
      if (((ix86_cpu) == (CPU_PENTIUM)))
                      ^~
                      =
128 warnings generated.
src/cppfiles.c:393:29: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
      if (inc->st.st_size > INTTYPE_MAXIMUM (ssize_t))
                            ^~~~~~~~~~~~~~~~~~~~~~~~~
./src/system.h:192:44: note: expanded from macro 'INTTYPE_MAXIMUM'
#define INTTYPE_MAXIMUM(t) ((t) (~ (t) 0 - INTTYPE_MINIMUM (t)))
                                           ^~~~~~~~~~~~~~~~~~~
./src/system.h:191:40: note: expanded from macro 'INTTYPE_MINIMUM'
                             ? ~ (t) 0 << (sizeof(t) * CHAR_BIT - 1) : (t) 0))
                               ~~~~~~~ ^
1 warning generated.
src/c-common.c:374:19: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
  r = build_stmt (IF_STMT, NULL_TREE, NULL_TREE, NULL_TREE);
      ~~~~~~~~~~  ^~~~~~~
src/c-common.c:390:19: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
  r = build_stmt (WHILE_STMT, NULL_TREE, NULL_TREE);
      ~~~~~~~~~~  ^~~~~~~~~~
src/c-common.c:449:26: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
      body = build_stmt (COMPOUND_STMT, body);
             ~~~~~~~~~~  ^~~~~~~~~~~~~
src/c-common.c:1257:32: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
  return add_stmt (build_stmt (EXPR_STMT, expr));
                   ~~~~~~~~~~  ^~~~~~~~~
In file included from src/c-common.c:2831:
./src/builtins.def:145:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_EXT_LIB_BUILTIN(BUILT_IN_ALLOCA,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:106:3: note: expanded from macro 'DEF_EXT_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:145:1: note: use array indexing to silence this warning
./src/builtins.def:106:3: note: expanded from macro 'DEF_EXT_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:145:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_EXT_LIB_BUILTIN(BUILT_IN_ALLOCA,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:106:3: note: expanded from macro 'DEF_EXT_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:145:1: note: use array indexing to silence this warning
./src/builtins.def:106:3: note: expanded from macro 'DEF_EXT_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:150:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_ALWAYS_BUILTIN(BUILT_IN_ABS,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:97:3: note: expanded from macro 'DEF_LIB_ALWAYS_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:150:1: note: use array indexing to silence this warning
./src/builtins.def:97:3: note: expanded from macro 'DEF_LIB_ALWAYS_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:150:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_ALWAYS_BUILTIN(BUILT_IN_ABS,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:97:3: note: expanded from macro 'DEF_LIB_ALWAYS_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:150:1: note: use array indexing to silence this warning
./src/builtins.def:97:3: note: expanded from macro 'DEF_LIB_ALWAYS_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:153:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_ALWAYS_BUILTIN(BUILT_IN_LABS,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:97:3: note: expanded from macro 'DEF_LIB_ALWAYS_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:153:1: note: use array indexing to silence this warning
./src/builtins.def:97:3: note: expanded from macro 'DEF_LIB_ALWAYS_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:153:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_ALWAYS_BUILTIN(BUILT_IN_LABS,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:97:3: note: expanded from macro 'DEF_LIB_ALWAYS_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:153:1: note: use array indexing to silence this warning
./src/builtins.def:97:3: note: expanded from macro 'DEF_LIB_ALWAYS_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:157:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_ALWAYS_BUILTIN(BUILT_IN_FABS,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:97:3: note: expanded from macro 'DEF_LIB_ALWAYS_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:157:1: note: use array indexing to silence this warning
./src/builtins.def:97:3: note: expanded from macro 'DEF_LIB_ALWAYS_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:157:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_ALWAYS_BUILTIN(BUILT_IN_FABS,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:97:3: note: expanded from macro 'DEF_LIB_ALWAYS_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:157:1: note: use array indexing to silence this warning
./src/builtins.def:97:3: note: expanded from macro 'DEF_LIB_ALWAYS_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:160:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_ALWAYS_BUILTIN(BUILT_IN_FABSF,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:97:3: note: expanded from macro 'DEF_LIB_ALWAYS_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:160:1: note: use array indexing to silence this warning
./src/builtins.def:97:3: note: expanded from macro 'DEF_LIB_ALWAYS_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:160:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_ALWAYS_BUILTIN(BUILT_IN_FABSF,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:97:3: note: expanded from macro 'DEF_LIB_ALWAYS_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:160:1: note: use array indexing to silence this warning
./src/builtins.def:97:3: note: expanded from macro 'DEF_LIB_ALWAYS_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:163:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_ALWAYS_BUILTIN(BUILT_IN_FABSL,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:97:3: note: expanded from macro 'DEF_LIB_ALWAYS_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:163:1: note: use array indexing to silence this warning
./src/builtins.def:97:3: note: expanded from macro 'DEF_LIB_ALWAYS_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:163:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_ALWAYS_BUILTIN(BUILT_IN_FABSL,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:97:3: note: expanded from macro 'DEF_LIB_ALWAYS_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:163:1: note: use array indexing to silence this warning
./src/builtins.def:97:3: note: expanded from macro 'DEF_LIB_ALWAYS_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:167:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_C99_BUILTIN(BUILT_IN_LLABS,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:167:1: note: use array indexing to silence this warning
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:167:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_C99_BUILTIN(BUILT_IN_LLABS,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:167:1: note: use array indexing to silence this warning
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:170:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_C99_BUILTIN(BUILT_IN_IMAXABS,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:170:1: note: use array indexing to silence this warning
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:170:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_C99_BUILTIN(BUILT_IN_IMAXABS,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:170:1: note: use array indexing to silence this warning
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:173:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_C99_BUILTIN(BUILT_IN_CONJ,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:173:1: note: use array indexing to silence this warning
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:173:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_C99_BUILTIN(BUILT_IN_CONJ,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:173:1: note: use array indexing to silence this warning
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:176:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_C99_BUILTIN(BUILT_IN_CONJF,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:176:1: note: use array indexing to silence this warning
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:176:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_C99_BUILTIN(BUILT_IN_CONJF,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:176:1: note: use array indexing to silence this warning
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:179:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_C99_BUILTIN(BUILT_IN_CONJL,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:179:1: note: use array indexing to silence this warning
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:179:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_C99_BUILTIN(BUILT_IN_CONJL,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:179:1: note: use array indexing to silence this warning
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:182:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_C99_BUILTIN(BUILT_IN_CREAL,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:182:1: note: use array indexing to silence this warning
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:182:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_C99_BUILTIN(BUILT_IN_CREAL,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:182:1: note: use array indexing to silence this warning
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:185:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_C99_BUILTIN(BUILT_IN_CREALF,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:185:1: note: use array indexing to silence this warning
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:185:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_C99_BUILTIN(BUILT_IN_CREALF,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:185:1: note: use array indexing to silence this warning
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:188:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_C99_BUILTIN(BUILT_IN_CREALL,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:188:1: note: use array indexing to silence this warning
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:188:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_C99_BUILTIN(BUILT_IN_CREALL,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:188:1: note: use array indexing to silence this warning
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:191:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_C99_BUILTIN(BUILT_IN_CIMAG,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:191:1: note: use array indexing to silence this warning
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:191:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_C99_BUILTIN(BUILT_IN_CIMAG,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:191:1: note: use array indexing to silence this warning
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:194:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_C99_BUILTIN(BUILT_IN_CIMAGF,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:194:1: note: use array indexing to silence this warning
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:194:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_C99_BUILTIN(BUILT_IN_CIMAGF,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:194:1: note: use array indexing to silence this warning
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:197:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_C99_BUILTIN(BUILT_IN_CIMAGL,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:197:1: note: use array indexing to silence this warning
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:197:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_C99_BUILTIN(BUILT_IN_CIMAGL,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:197:1: note: use array indexing to silence this warning
./src/builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:214:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_BUILTIN (BUILT_IN_BZERO,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:214:1: note: use array indexing to silence this warning
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:214:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_BUILTIN (BUILT_IN_BZERO,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:214:1: note: use array indexing to silence this warning
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:220:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_BUILTIN (BUILT_IN_BCMP,
^~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:220:1: note: use array indexing to silence this warning
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:220:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_BUILTIN (BUILT_IN_BCMP,
^~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:220:1: note: use array indexing to silence this warning
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:227:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_EXT_LIB_BUILTIN(BUILT_IN_FFS,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:106:3: note: expanded from macro 'DEF_EXT_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:227:1: note: use array indexing to silence this warning
./src/builtins.def:106:3: note: expanded from macro 'DEF_EXT_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:227:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_EXT_LIB_BUILTIN(BUILT_IN_FFS,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:106:3: note: expanded from macro 'DEF_EXT_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:227:1: note: use array indexing to silence this warning
./src/builtins.def:106:3: note: expanded from macro 'DEF_EXT_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:230:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_EXT_LIB_BUILTIN(BUILT_IN_INDEX,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:106:3: note: expanded from macro 'DEF_EXT_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:230:1: note: use array indexing to silence this warning
./src/builtins.def:106:3: note: expanded from macro 'DEF_EXT_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:230:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_EXT_LIB_BUILTIN(BUILT_IN_INDEX,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:106:3: note: expanded from macro 'DEF_EXT_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:230:1: note: use array indexing to silence this warning
./src/builtins.def:106:3: note: expanded from macro 'DEF_EXT_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:233:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_EXT_LIB_BUILTIN(BUILT_IN_RINDEX,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:106:3: note: expanded from macro 'DEF_EXT_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:233:1: note: use array indexing to silence this warning
./src/builtins.def:106:3: note: expanded from macro 'DEF_EXT_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:233:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_EXT_LIB_BUILTIN(BUILT_IN_RINDEX,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:106:3: note: expanded from macro 'DEF_EXT_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:233:1: note: use array indexing to silence this warning
./src/builtins.def:106:3: note: expanded from macro 'DEF_EXT_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:237:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_MEMCPY,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:237:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:237:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_MEMCPY,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:237:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:240:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_MEMCMP,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:240:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:240:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_MEMCMP,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:240:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:243:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_MEMSET,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:243:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:243:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_MEMSET,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:243:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:247:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_STRCAT,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:247:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:247:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_STRCAT,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:247:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:250:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_STRNCAT,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:250:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:250:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_STRNCAT,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:250:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:253:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_STRCPY,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:253:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:253:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_STRCPY,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:253:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:256:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_STRNCPY,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:256:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:256:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_STRNCPY,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:256:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:259:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_STRCMP,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:259:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:259:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_STRCMP,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:259:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:262:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_STRNCMP,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:262:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:262:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_STRNCMP,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:262:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:265:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_STRLEN,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:265:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:265:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_STRLEN,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:265:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:268:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_STRSTR,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:268:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:268:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_STRSTR,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:268:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:271:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_STRPBRK,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:271:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:271:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_STRPBRK,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:271:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:274:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_STRSPN,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:274:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:274:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_STRSPN,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:274:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:277:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_STRCSPN,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:277:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:277:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_STRCSPN,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:277:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:280:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_STRCHR,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:280:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:280:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_STRCHR,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:280:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:283:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_STRRCHR,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:283:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:283:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_STRRCHR,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:283:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:287:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_SQRT,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:287:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:287:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_SQRT,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:287:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:290:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_SIN,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:290:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:290:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_SIN,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:290:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:293:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_COS,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:293:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:293:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_COS,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:293:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:296:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_SQRTF,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:296:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:296:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_SQRTF,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:296:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:299:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_SINF,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:299:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:299:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_SINF,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:299:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:302:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_COSF,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:302:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:302:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_COSF,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:302:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:305:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_SQRTL,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:305:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:305:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_SQRTL,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:305:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:308:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_SINL,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:308:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:308:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_SINL,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:308:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:311:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_COSL,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:311:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:311:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_LIB_BUILTIN(BUILT_IN_COSL,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:311:1: note: use array indexing to silence this warning
./src/builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:321:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_SAVEREGS,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:321:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:321:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_SAVEREGS,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:321:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:324:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_CLASSIFY_TYPE,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:324:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:324:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_CLASSIFY_TYPE,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:324:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:327:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_NEXT_ARG,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:327:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:327:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_NEXT_ARG,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:327:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:330:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_ARGS_INFO,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:330:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:330:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_ARGS_INFO,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:330:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:333:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_CONSTANT_P, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:333:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:333:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_CONSTANT_P, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:333:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:336:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_FRAME_ADDRESS,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:336:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:336:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_FRAME_ADDRESS,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:336:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:339:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_RETURN_ADDRESS, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:339:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:339:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_RETURN_ADDRESS, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:339:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:342:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_AGGREGATE_INCOMING_ADDRESS,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:342:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:342:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_AGGREGATE_INCOMING_ADDRESS,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:342:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:345:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_APPLY_ARGS,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:345:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:345:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_APPLY_ARGS,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:345:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:348:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_APPLY,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:348:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:348:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_APPLY,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:348:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:351:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_RETURN,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:351:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:351:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_RETURN,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:351:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:354:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_SETJMP,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:354:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:354:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_SETJMP,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:354:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:357:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_LONGJMP,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:357:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:357:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_LONGJMP,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:357:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:360:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_TRAP,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:360:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:360:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_TRAP,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:360:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:363:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_PREFETCH,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:363:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:363:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_PREFETCH,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:363:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:368:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_FALLBACK_BUILTIN(BUILT_IN_PUTCHAR,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:70:3: note: expanded from macro 'DEF_FALLBACK_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:368:1: note: use array indexing to silence this warning
./src/builtins.def:70:3: note: expanded from macro 'DEF_FALLBACK_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:368:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_FALLBACK_BUILTIN(BUILT_IN_PUTCHAR,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:70:3: note: expanded from macro 'DEF_FALLBACK_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:368:1: note: use array indexing to silence this warning
./src/builtins.def:70:3: note: expanded from macro 'DEF_FALLBACK_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:371:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_FALLBACK_BUILTIN(BUILT_IN_PUTS,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:70:3: note: expanded from macro 'DEF_FALLBACK_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:371:1: note: use array indexing to silence this warning
./src/builtins.def:70:3: note: expanded from macro 'DEF_FALLBACK_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:371:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_FALLBACK_BUILTIN(BUILT_IN_PUTS,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:70:3: note: expanded from macro 'DEF_FALLBACK_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:371:1: note: use array indexing to silence this warning
./src/builtins.def:70:3: note: expanded from macro 'DEF_FALLBACK_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:374:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_FRONT_END_LIB_BUILTIN(BUILT_IN_PRINTF,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:120:3: note: expanded from macro 'DEF_FRONT_END_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_FRONTEND, TYPE, TYPE,       \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:374:1: note: use array indexing to silence this warning
./src/builtins.def:120:3: note: expanded from macro 'DEF_FRONT_END_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_FRONTEND, TYPE, TYPE,       \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:374:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_FRONT_END_LIB_BUILTIN(BUILT_IN_PRINTF,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:120:3: note: expanded from macro 'DEF_FRONT_END_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_FRONTEND, TYPE, TYPE,       \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:374:1: note: use array indexing to silence this warning
./src/builtins.def:120:3: note: expanded from macro 'DEF_FRONT_END_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_FRONTEND, TYPE, TYPE,       \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:377:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_FALLBACK_BUILTIN(BUILT_IN_FPUTC,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:70:3: note: expanded from macro 'DEF_FALLBACK_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:377:1: note: use array indexing to silence this warning
./src/builtins.def:70:3: note: expanded from macro 'DEF_FALLBACK_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:377:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_FALLBACK_BUILTIN(BUILT_IN_FPUTC,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:70:3: note: expanded from macro 'DEF_FALLBACK_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:377:1: note: use array indexing to silence this warning
./src/builtins.def:70:3: note: expanded from macro 'DEF_FALLBACK_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:384:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_BUILTIN (BUILT_IN_FPUTS,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:384:1: note: use array indexing to silence this warning
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:384:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_BUILTIN (BUILT_IN_FPUTS,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:384:1: note: use array indexing to silence this warning
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:390:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_FALLBACK_BUILTIN(BUILT_IN_FWRITE,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:70:3: note: expanded from macro 'DEF_FALLBACK_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:390:1: note: use array indexing to silence this warning
./src/builtins.def:70:3: note: expanded from macro 'DEF_FALLBACK_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:390:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_FALLBACK_BUILTIN(BUILT_IN_FWRITE,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:70:3: note: expanded from macro 'DEF_FALLBACK_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:390:1: note: use array indexing to silence this warning
./src/builtins.def:70:3: note: expanded from macro 'DEF_FALLBACK_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:393:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_FRONT_END_LIB_BUILTIN(BUILT_IN_FPRINTF,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:120:3: note: expanded from macro 'DEF_FRONT_END_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_FRONTEND, TYPE, TYPE,       \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:393:1: note: use array indexing to silence this warning
./src/builtins.def:120:3: note: expanded from macro 'DEF_FRONT_END_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_FRONTEND, TYPE, TYPE,       \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:393:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_FRONT_END_LIB_BUILTIN(BUILT_IN_FPRINTF,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:120:3: note: expanded from macro 'DEF_FRONT_END_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_FRONTEND, TYPE, TYPE,       \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:393:1: note: use array indexing to silence this warning
./src/builtins.def:120:3: note: expanded from macro 'DEF_FRONT_END_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_FRONTEND, TYPE, TYPE,       \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:399:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_EXT_FALLBACK_BUILTIN(BUILT_IN_PUTCHAR_UNLOCKED,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:79:3: note: expanded from macro 'DEF_EXT_FALLBACK_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:399:1: note: use array indexing to silence this warning
./src/builtins.def:79:3: note: expanded from macro 'DEF_EXT_FALLBACK_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:399:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_EXT_FALLBACK_BUILTIN(BUILT_IN_PUTCHAR_UNLOCKED,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:79:3: note: expanded from macro 'DEF_EXT_FALLBACK_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:399:1: note: use array indexing to silence this warning
./src/builtins.def:79:3: note: expanded from macro 'DEF_EXT_FALLBACK_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:402:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_EXT_FALLBACK_BUILTIN(BUILT_IN_PUTS_UNLOCKED,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:79:3: note: expanded from macro 'DEF_EXT_FALLBACK_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:402:1: note: use array indexing to silence this warning
./src/builtins.def:79:3: note: expanded from macro 'DEF_EXT_FALLBACK_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:402:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_EXT_FALLBACK_BUILTIN(BUILT_IN_PUTS_UNLOCKED,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:79:3: note: expanded from macro 'DEF_EXT_FALLBACK_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:402:1: note: use array indexing to silence this warning
./src/builtins.def:79:3: note: expanded from macro 'DEF_EXT_FALLBACK_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:405:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_EXT_FRONT_END_LIB_BUILTIN(BUILT_IN_PRINTF_UNLOCKED,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:129:3: note: expanded from macro 'DEF_EXT_FRONT_END_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_FRONTEND, TYPE, TYPE,       \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:405:1: note: use array indexing to silence this warning
./src/builtins.def:129:3: note: expanded from macro 'DEF_EXT_FRONT_END_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_FRONTEND, TYPE, TYPE,       \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:405:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_EXT_FRONT_END_LIB_BUILTIN(BUILT_IN_PRINTF_UNLOCKED,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:129:3: note: expanded from macro 'DEF_EXT_FRONT_END_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_FRONTEND, TYPE, TYPE,       \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:405:1: note: use array indexing to silence this warning
./src/builtins.def:129:3: note: expanded from macro 'DEF_EXT_FRONT_END_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_FRONTEND, TYPE, TYPE,       \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:408:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_EXT_FALLBACK_BUILTIN(BUILT_IN_FPUTC_UNLOCKED,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:79:3: note: expanded from macro 'DEF_EXT_FALLBACK_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:408:1: note: use array indexing to silence this warning
./src/builtins.def:79:3: note: expanded from macro 'DEF_EXT_FALLBACK_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:408:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_EXT_FALLBACK_BUILTIN(BUILT_IN_FPUTC_UNLOCKED,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:79:3: note: expanded from macro 'DEF_EXT_FALLBACK_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:408:1: note: use array indexing to silence this warning
./src/builtins.def:79:3: note: expanded from macro 'DEF_EXT_FALLBACK_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:415:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_BUILTIN (BUILT_IN_FPUTS_UNLOCKED,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:415:1: note: use array indexing to silence this warning
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:415:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_BUILTIN (BUILT_IN_FPUTS_UNLOCKED,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:415:1: note: use array indexing to silence this warning
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:421:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_EXT_FALLBACK_BUILTIN(BUILT_IN_FWRITE_UNLOCKED,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:79:3: note: expanded from macro 'DEF_EXT_FALLBACK_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:421:1: note: use array indexing to silence this warning
./src/builtins.def:79:3: note: expanded from macro 'DEF_EXT_FALLBACK_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:421:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_EXT_FALLBACK_BUILTIN(BUILT_IN_FWRITE_UNLOCKED,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:79:3: note: expanded from macro 'DEF_EXT_FALLBACK_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:421:1: note: use array indexing to silence this warning
./src/builtins.def:79:3: note: expanded from macro 'DEF_EXT_FALLBACK_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:424:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_EXT_FRONT_END_LIB_BUILTIN(BUILT_IN_FPRINTF_UNLOCKED,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:129:3: note: expanded from macro 'DEF_EXT_FRONT_END_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_FRONTEND, TYPE, TYPE,       \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:424:1: note: use array indexing to silence this warning
./src/builtins.def:129:3: note: expanded from macro 'DEF_EXT_FRONT_END_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_FRONTEND, TYPE, TYPE,       \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:424:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_EXT_FRONT_END_LIB_BUILTIN(BUILT_IN_FPRINTF_UNLOCKED,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:129:3: note: expanded from macro 'DEF_EXT_FRONT_END_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_FRONTEND, TYPE, TYPE,       \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:424:1: note: use array indexing to silence this warning
./src/builtins.def:129:3: note: expanded from macro 'DEF_EXT_FRONT_END_LIB_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_FRONTEND, TYPE, TYPE,       \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:429:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_ISGREATER, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:429:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:429:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_ISGREATER, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:429:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:432:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_ISGREATEREQUAL,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:432:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:432:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_ISGREATEREQUAL,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:432:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:435:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_ISLESS,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:435:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:435:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_ISLESS,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:435:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:438:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_ISLESSEQUAL,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:438:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:438:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_ISLESSEQUAL,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:438:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:441:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_ISLESSGREATER,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:441:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:441:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_ISLESSGREATER,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:441:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:444:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_ISUNORDERED,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:444:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:444:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_ISUNORDERED,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:444:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:449:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_UNWIND_INIT,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:449:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:449:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_UNWIND_INIT,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:449:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:452:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_DWARF_CFA,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:452:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:452:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_DWARF_CFA,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:452:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:455:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_DWARF_FP_REGNUM,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:455:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:455:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_DWARF_FP_REGNUM,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:455:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:458:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_INIT_DWARF_REG_SIZES,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:458:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:458:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_INIT_DWARF_REG_SIZES,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:458:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:461:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_FROB_RETURN_ADDR,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:461:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:461:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_FROB_RETURN_ADDR,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:461:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:464:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_EXTRACT_RETURN_ADDR,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:464:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:464:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_EXTRACT_RETURN_ADDR,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:464:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:467:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_EH_RETURN,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:467:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:467:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_EH_RETURN,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:467:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:470:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_EH_RETURN_DATA_REGNO,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:470:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:470:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_EH_RETURN_DATA_REGNO,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:470:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:474:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_VARARGS_START,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:474:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:474:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_VARARGS_START,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:474:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:477:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_STDARG_START,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:477:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:477:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_STDARG_START,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:477:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:480:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_VA_END,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:480:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:480:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_VA_END,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:480:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:483:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_VA_COPY,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:483:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:483:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_VA_COPY,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:483:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
In file included from src/c-common.c:2831:
./src/builtins.def:486:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_EXPECT,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:486:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
                                  ? (NAME + strlen ("__builtin_"))      \
                                          ^
In file included from src/c-common.c:2831:
./src/builtins.def:486:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
DEF_GCC_BUILTIN(BUILT_IN_EXPECT,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                   ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./src/builtins.def:486:1: note: use array indexing to silence this warning
./src/builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
  DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
  ^
src/c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
                                   NAME + strlen ("__builtin_"),        \
                                        ^
src/c-common.c:3207:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case EXPR_STMT:
         ^
src/c-common.c:3208:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case COMPOUND_STMT:
         ^
src/c-common.c:3209:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case DECL_STMT:
         ^
src/c-common.c:3210:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case IF_STMT:
         ^
src/c-common.c:3211:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case FOR_STMT:
         ^
src/c-common.c:3212:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case WHILE_STMT:
         ^
src/c-common.c:3213:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case DO_STMT:
         ^
src/c-common.c:3214:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case RETURN_STMT:
         ^
src/c-common.c:3215:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case BREAK_STMT:
         ^
src/c-common.c:3216:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case CONTINUE_STMT:
         ^
src/c-common.c:3218:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case SWITCH_STMT:
         ^
src/c-common.c:3219:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case GOTO_STMT:
         ^
src/c-common.c:3220:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case LABEL_STMT:
         ^
src/c-common.c:3221:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case ASM_STMT:
         ^
src/c-common.c:3217:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case SCOPE_STMT:
         ^
src/c-common.c:3222:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case FILE_STMT:
         ^
src/c-common.c:3223:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case CASE_LABEL:
         ^
src/c-common.c:3206:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case CLEANUP_STMT:
         ^
src/c-common.c:3562:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case STMT_EXPR:
         ^
src/c-common.c:3636:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
    case COMPOUND_LITERAL_EXPR:
         ^
214 warnings generated.
src/reg-stack.c:957:26: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
    = gen_rtx_EXPR_LIST (REG_DEAD, FP_MODE_REG (FIRST_STACK_REG, DFmode),
      ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/reg-stack.c:1175:42: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
          REG_NOTES (insn) = gen_rtx_EXPR_LIST (REG_DEAD, top_stack_reg,
                             ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
2 warnings generated.
src/emit-rtl.c:3155:30: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
                      = gen_rtx_EXPR_LIST (REG_BR_PROB,
                        ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/emit-rtl.c:3182:27: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
                          = gen_rtx_EXPR_LIST (REG_EH_REGION,
                            ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/emit-rtl.c:3196:27: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
                          = gen_rtx_EXPR_LIST (REG_NOTE_KIND (note),
                            ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
./src/rtl.h:601:30: note: expanded from macro 'REG_NOTE_KIND'
#define REG_NOTE_KIND(LINK) ((enum reg_note) GET_MODE (LINK))
                             ^
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/emit-rtl.c:3208:27: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
                          = gen_rtx_EXPR_LIST (REG_NOTE_KIND (note),
                            ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
./src/rtl.h:601:30: note: expanded from macro 'REG_NOTE_KIND'
#define REG_NOTE_KIND(LINK) ((enum reg_note) GET_MODE (LINK))
                             ^
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/emit-rtl.c:4355:41: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
  REG_NOTES (insn) = gen_rtx_EXPR_LIST (kind, datum, REG_NOTES (insn));
                     ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
5 warnings generated.
src/expr.c:4941:22: warning: implicit conversion from enumeration type 'enum rtx_code' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
                                       NULL_RTX, MEM, EXPAND_CONST_ADDRESS);
                                                 ^~~
src/expr.c:4957:52: warning: implicit conversion from enumeration type 'enum rtx_code' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
          startbit_rtx = expand_expr (startbit, NULL_RTX, MEM,
                         ~~~~~~~~~~~                      ^~~
src/expr.c:4959:48: warning: implicit conversion from enumeration type 'enum rtx_code' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
          endbit_rtx = expand_expr (endbit, NULL_RTX, MEM,
                       ~~~~~~~~~~~                    ^~~
src/expr.c:7146:25: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
          = gen_rtx_EXPR_LIST (REG_VTABLE_REF, vtbl_ref, REG_NOTES (insn));
            ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/expr.c:8895:10: warning: logical not is only applied to the left hand side of this comparison [-Wlogical-not-parentheses]
      || !exact_log2 (tree_low_cst (TREE_OPERAND (offset, 1), 1) + 1) < 0)
         ^                                                            ~
src/expr.c:8895:10: note: add parentheses after the '!' to evaluate the comparison first
      || !exact_log2 (tree_low_cst (TREE_OPERAND (offset, 1), 1) + 1) < 0)
         ^
          (                                                              )
src/expr.c:8895:10: note: add parentheses around left hand side expression to silence this warning
      || !exact_log2 (tree_low_cst (TREE_OPERAND (offset, 1), 1) + 1) < 0)
         ^
         (                                                           )
src/expr.c:8895:71: warning: result of comparison of constant 0 with boolean expression is always false [-Wtautological-constant-compare]
      || !exact_log2 (tree_low_cst (TREE_OPERAND (offset, 1), 1) + 1) < 0)
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~
6 warnings generated.
src/reload.c:3928:44: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
            REG_NOTES (insn) = gen_rtx_INSN_LIST (REG_LABEL,
                               ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
./src/genrtl.h:124:31: note: expanded from macro 'gen_rtx_INSN_LIST'
  gen_rtx_fmt_ue (INSN_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/reload.c:5880:44: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
            REG_NOTES (insn) = gen_rtx_INSN_LIST (REG_LABEL,
                               ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
./src/genrtl.h:124:31: note: expanded from macro 'gen_rtx_INSN_LIST'
  gen_rtx_fmt_ue (INSN_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
2 warnings generated.
src/predict.c:104:26: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
    = gen_rtx_EXPR_LIST (REG_BR_PRED,
      ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/predict.c:301:23: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
        = gen_rtx_EXPR_LIST (REG_BR_PROB,
          ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/predict.c:905:8: warning: logical not is only applied to the left hand side of this bitwise operator [-Wlogical-not-parentheses]
          if (!fallthru->flags & EDGE_FALLTHRU)
              ^                ~
src/predict.c:905:8: note: add parentheses after the '!' to evaluate the bitwise operator first
          if (!fallthru->flags & EDGE_FALLTHRU)
              ^
               (                              )
src/predict.c:905:8: note: add parentheses around left hand side expression to silence this warning
          if (!fallthru->flags & EDGE_FALLTHRU)
              ^
              (               )
3 warnings generated.
src/tree-inline.c:351:31: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
      goto_stmt = build_stmt (GOTO_STMT, id->ret_label);
                  ~~~~~~~~~~  ^~~~~~~~~
src/tree-inline.c:360:22: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
          *tp = build_stmt (EXPR_STMT,
                ~~~~~~~~~~  ^~~~~~~~~
src/tree-inline.c:529:31: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
      init_stmt = build_stmt (DECL_STMT, var);
                  ~~~~~~~~~~  ^~~~~~~~~
src/tree-inline.c:554:28: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
          init_stmt = build_stmt (EXPR_STMT,
                      ~~~~~~~~~~  ^~~~~~~~~
src/tree-inline.c:570:31: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
          cleanup_stmt = build_stmt (CLEANUP_STMT, var, cleanup);
                         ~~~~~~~~~~  ^~~~~~~~~~~~
src/tree-inline.c:587:31: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
      init_stmt = build_stmt (EXPR_STMT, value);
                  ~~~~~~~~~~  ^~~~~~~~~
src/tree-inline.c:634:29: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
    *use_stmt = build_stmt (EXPR_STMT, var);
                ~~~~~~~~~~  ^~~~~~~~~
src/tree-inline.c:636:29: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
    *use_stmt = build_stmt (EXPR_STMT,
                ~~~~~~~~~~  ^~~~~~~~~
src/tree-inline.c:645:24: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
    return build_stmt (DECL_STMT, var);
           ~~~~~~~~~~  ^~~~~~~~~
src/tree-inline.c:856:18: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
  expr = build1 (STMT_EXPR, TREE_TYPE (TREE_TYPE (fn)), NULL_TREE);
         ~~~~~~  ^~~~~~~~~
src/tree-inline.c:905:28: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
  scope_stmt = build_stmt (SCOPE_STMT, DECL_INITIAL (fn));
               ~~~~~~~~~~  ^~~~~~~~~~
src/tree-inline.c:930:28: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
  scope_stmt = build_stmt (SCOPE_STMT, DECL_INITIAL (fn));
               ~~~~~~~~~~  ^~~~~~~~~~
src/tree-inline.c:941:21: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
               build_stmt (LABEL_STMT, id->ret_label));
               ~~~~~~~~~~  ^~~~~~~~~~
13 warnings generated.
src/i386.c:7938:25: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
          = gen_rtx_EXPR_LIST (REG_BR_PROB,
            ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/i386.c:7948:28: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
      = gen_rtx_EXPR_LIST (REG_BR_PROB,
        ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/i386.c:7959:25: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
          = gen_rtx_EXPR_LIST (REG_BR_PROB,
            ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
3 warnings generated.
In file included from src/rtl.c:188:
./src/machmode.def:80:1: warning: shift count >= width of type [-Wshift-count-overflow]
DEF_MACHMODE (DImode, "DI", MODE_INT, BITS_PER_UNIT*8, 8, 8, TImode, VOIDmode)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
  ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
                                                                                                    ^  ~~~~~~~~~
In file included from src/rtl.c:188:
./src/machmode.def:81:1: warning: shift count >= width of type [-Wshift-count-overflow]
DEF_MACHMODE (TImode, "TI", MODE_INT, BITS_PER_UNIT*16, 16, 16, OImode, VOIDmode)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
  ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
                                                                                                    ^  ~~~~~~~~~
In file included from src/rtl.c:188:
./src/machmode.def:82:1: warning: shift count >= width of type [-Wshift-count-overflow]
DEF_MACHMODE (OImode, "OI", MODE_INT, BITS_PER_UNIT*32, 32, 32, VOIDmode, VOIDmode)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
  ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
                                                                                                    ^  ~~~~~~~~~
In file included from src/rtl.c:188:
./src/machmode.def:90:1: warning: shift count >= width of type [-Wshift-count-overflow]
DEF_MACHMODE (PDImode, "PDI", MODE_PARTIAL_INT, BITS_PER_UNIT*8, 8, 8, VOIDmode, VOIDmode)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
  ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
                                                                                                    ^  ~~~~~~~~~
In file included from src/rtl.c:188:
./src/machmode.def:96:1: warning: shift count >= width of type [-Wshift-count-overflow]
DEF_MACHMODE (DFmode, "DF", MODE_FLOAT, BITS_PER_UNIT*8, 8, 8, XFmode, VOIDmode)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
  ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
                                                                                                    ^  ~~~~~~~~~
In file included from src/rtl.c:188:
./src/machmode.def:97:1: warning: shift count >= width of type [-Wshift-count-overflow]
DEF_MACHMODE (XFmode, "XF", MODE_FLOAT, BITS_PER_UNIT*12, 12, 12, TFmode, VOIDmode) /* IEEE extended */
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
  ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
                                                                                                    ^  ~~~~~~~~~
In file included from src/rtl.c:188:
./src/machmode.def:98:1: warning: shift count >= width of type [-Wshift-count-overflow]
DEF_MACHMODE (TFmode, "TF", MODE_FLOAT, BITS_PER_UNIT*16, 16, 16, VOIDmode, VOIDmode)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
  ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
                                                                                                    ^  ~~~~~~~~~
In file included from src/rtl.c:188:
./src/machmode.def:103:1: warning: shift count >= width of type [-Wshift-count-overflow]
DEF_MACHMODE (SCmode, "SC", MODE_COMPLEX_FLOAT, BITS_PER_UNIT*8, 8, 4, DCmode, SFmode)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
  ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
                                                                                                    ^  ~~~~~~~~~
In file included from src/rtl.c:188:
./src/machmode.def:104:1: warning: shift count >= width of type [-Wshift-count-overflow]
DEF_MACHMODE (DCmode, "DC", MODE_COMPLEX_FLOAT, BITS_PER_UNIT*16, 16, 8, XCmode, DFmode)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
  ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
                                                                                                    ^  ~~~~~~~~~
In file included from src/rtl.c:188:
./src/machmode.def:105:1: warning: shift count >= width of type [-Wshift-count-overflow]
DEF_MACHMODE (XCmode, "XC", MODE_COMPLEX_FLOAT, BITS_PER_UNIT*24, 24, 12, TCmode, XFmode)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
  ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
                                                                                                    ^  ~~~~~~~~~
In file included from src/rtl.c:188:
./src/machmode.def:106:1: warning: shift count >= width of type [-Wshift-count-overflow]
DEF_MACHMODE (TCmode, "TC", MODE_COMPLEX_FLOAT, BITS_PER_UNIT*32, 32, 16, VOIDmode, TFmode)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
  ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
                                                                                                    ^  ~~~~~~~~~
In file included from src/rtl.c:188:
./src/machmode.def:110:1: warning: shift count >= width of type [-Wshift-count-overflow]
DEF_MACHMODE (CSImode, "CSI", MODE_COMPLEX_INT, BITS_PER_UNIT*8, 8, 4, CDImode, SImode)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
  ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
                                                                                                    ^  ~~~~~~~~~
In file included from src/rtl.c:188:
./src/machmode.def:111:1: warning: shift count >= width of type [-Wshift-count-overflow]
DEF_MACHMODE (CDImode, "CDI", MODE_COMPLEX_INT, BITS_PER_UNIT*16, 16, 8, CTImode, DImode)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
  ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
                                                                                                    ^  ~~~~~~~~~
In file included from src/rtl.c:188:
./src/machmode.def:112:1: warning: shift count >= width of type [-Wshift-count-overflow]
DEF_MACHMODE (CTImode, "CTI", MODE_COMPLEX_INT, BITS_PER_UNIT*32, 32, 16, COImode, TImode)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
  ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
                                                                                                    ^  ~~~~~~~~~
In file included from src/rtl.c:188:
./src/machmode.def:113:1: warning: shift count >= width of type [-Wshift-count-overflow]
DEF_MACHMODE (COImode, "COI", MODE_COMPLEX_INT, BITS_PER_UNIT*64, 64, 32, VOIDmode, OImode)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
  ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
                                                                                                    ^  ~~~~~~~~~
In file included from src/rtl.c:188:
./src/machmode.def:123:1: warning: shift count >= width of type [-Wshift-count-overflow]
DEF_MACHMODE (V2SImode, "V2SI", MODE_VECTOR_INT, BITS_PER_UNIT*8, 8, 4, V16QImode, SImode)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
  ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
                                                                                                    ^  ~~~~~~~~~
In file included from src/rtl.c:188:
./src/machmode.def:124:1: warning: shift count >= width of type [-Wshift-count-overflow]
DEF_MACHMODE (V2DImode, "V2DI", MODE_VECTOR_INT, BITS_PER_UNIT*16, 16, 8, V8SImode, DImode)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
  ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
                                                                                                    ^  ~~~~~~~~~
In file included from src/rtl.c:188:
./src/machmode.def:127:1: warning: shift count >= width of type [-Wshift-count-overflow]
DEF_MACHMODE (V4HImode, "V4HI", MODE_VECTOR_INT, BITS_PER_UNIT*8, 8, 2, V2SImode, HImode)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
  ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
                                                                                                    ^  ~~~~~~~~~
In file included from src/rtl.c:188:
./src/machmode.def:128:1: warning: shift count >= width of type [-Wshift-count-overflow]
DEF_MACHMODE (V4SImode, "V4SI", MODE_VECTOR_INT, BITS_PER_UNIT*16, 16, 4, V2DImode, SImode)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
  ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
                                                                                                    ^  ~~~~~~~~~
In file included from src/rtl.c:188:
./src/machmode.def:129:1: warning: shift count >= width of type [-Wshift-count-overflow]
DEF_MACHMODE (V4DImode, "V4DI", MODE_VECTOR_INT, BITS_PER_UNIT*32, 32, 8, V8DImode, DImode)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
  ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
                                                                                                    ^  ~~~~~~~~~
In file included from src/rtl.c:188:
./src/machmode.def:131:1: warning: shift count >= width of type [-Wshift-count-overflow]
DEF_MACHMODE (V8QImode, "V8QI", MODE_VECTOR_INT, BITS_PER_UNIT*8, 8, 1, V4HImode, QImode)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
  ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
                                                                                                    ^  ~~~~~~~~~
In file included from src/rtl.c:188:
./src/machmode.def:132:1: warning: shift count >= width of type [-Wshift-count-overflow]
DEF_MACHMODE (V8HImode, "V8HI", MODE_VECTOR_INT, BITS_PER_UNIT*16, 16, 2, V4SImode, HImode)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
  ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
                                                                                                    ^  ~~~~~~~~~
In file included from src/rtl.c:188:
./src/machmode.def:133:1: warning: shift count >= width of type [-Wshift-count-overflow]
DEF_MACHMODE (V8SImode, "V8SI", MODE_VECTOR_INT, BITS_PER_UNIT*32, 32, 4, V4DImode, SImode)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
  ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
                                                                                                    ^  ~~~~~~~~~
In file included from src/rtl.c:188:
./src/machmode.def:134:1: warning: shift count >= width of type [-Wshift-count-overflow]
DEF_MACHMODE (V8DImode, "V8DI", MODE_VECTOR_INT, BITS_PER_UNIT*64, 64, 8, VOIDmode, DImode)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
  ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
                                                                                                    ^  ~~~~~~~~~
In file included from src/rtl.c:188:
./src/machmode.def:136:1: warning: shift count >= width of type [-Wshift-count-overflow]
DEF_MACHMODE (V16QImode, "V16QI", MODE_VECTOR_INT, BITS_PER_UNIT*16, 16, 1, V8HImode, QImode)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
  ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
                                                                                                    ^  ~~~~~~~~~
In file included from src/rtl.c:188:
./src/machmode.def:138:1: warning: shift count >= width of type [-Wshift-count-overflow]
DEF_MACHMODE (V2SFmode, "V2SF", MODE_VECTOR_FLOAT, BITS_PER_UNIT*8, 8, 4, V4SFmode, SFmode)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
  ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
                                                                                                    ^  ~~~~~~~~~
In file included from src/rtl.c:188:
./src/machmode.def:139:1: warning: shift count >= width of type [-Wshift-count-overflow]
DEF_MACHMODE (V2DFmode, "V2DF", MODE_VECTOR_FLOAT, BITS_PER_UNIT*16, 16, 8, V8SFmode, DFmode)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
  ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
                                                                                                    ^  ~~~~~~~~~
In file included from src/rtl.c:188:
./src/machmode.def:141:1: warning: shift count >= width of type [-Wshift-count-overflow]
DEF_MACHMODE (V4SFmode, "V4SF", MODE_VECTOR_FLOAT, BITS_PER_UNIT*16, 16, 4, V2DFmode, SFmode)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
  ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
                                                                                                    ^  ~~~~~~~~~
In file included from src/rtl.c:188:
./src/machmode.def:142:1: warning: shift count >= width of type [-Wshift-count-overflow]
DEF_MACHMODE (V4DFmode, "V4DF", MODE_VECTOR_FLOAT, BITS_PER_UNIT*32, 32, 8, V8DFmode, DFmode)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
  ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
                                                                                                    ^  ~~~~~~~~~
In file included from src/rtl.c:188:
./src/machmode.def:144:1: warning: shift count >= width of type [-Wshift-count-overflow]
DEF_MACHMODE (V8SFmode, "V8SF", MODE_VECTOR_FLOAT, BITS_PER_UNIT*32, 32, 4,V4DFmode, SFmode)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
  ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
                                                                                                    ^  ~~~~~~~~~
In file included from src/rtl.c:188:
./src/machmode.def:145:1: warning: shift count >= width of type [-Wshift-count-overflow]
DEF_MACHMODE (V8DFmode, "V8DF", MODE_VECTOR_FLOAT, BITS_PER_UNIT*64, 64, 8, VOIDmode, DFmode)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
  ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
                                                                                                    ^  ~~~~~~~~~
In file included from src/rtl.c:188:
./src/machmode.def:146:1: warning: shift count >= width of type [-Wshift-count-overflow]
DEF_MACHMODE (V16SFmode, "V16SF", MODE_VECTOR_FLOAT, 512, 64, 4, VOIDmode, SFmode)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
  ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
                                                                                                    ^  ~~~~~~~~~
32 warnings generated.
src/local-alloc.c:908:26: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
                  = gen_rtx_EXPR_LIST (REG_EQUIV, dest, REG_NOTES (init_insn));
                    ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
src/local-alloc.c:987:51: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
            REG_NOTES (insn) = note = gen_rtx_EXPR_LIST (REG_EQUIV, SET_SRC (set),
                                      ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
./src/genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
  ~~~~~~~~~~~~~~              ^~~~
2 warnings generated.
src/regrename.c:136:30: warning: comparison of different enumeration types ('enum reg_note' and 'enum machine_mode') [-Wenum-compare]
    if (REG_NOTE_KIND (note) == kind && REG_P (XEXP (note, 0)))
        ~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
1 warning generated.
clang-11: warning: -lm: 'linker' input unused [-Wunused-command-line-argument]
